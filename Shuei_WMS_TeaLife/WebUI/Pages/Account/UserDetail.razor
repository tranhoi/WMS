@page "/user/{userId:guid}"

@using Application.DTOs.Response.Account
@using Application.Extentions
@using Microsoft.AspNetCore.Authorization

<div class="container-fluid p-3">
    <div class="row">
        <div class="col-md-12 col-sm-12">
            <div class="x_panel">
                <div class="x_content">
                    @if (isLoading)
                    {
                        <p>Loading...</p>
                    }
                    else
                    {
                        <FormUser Mode="@mode" UserDto="@userDto" />
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter] public Guid? UserId { get; set; }

    private bool isLoading = true;
    private string mode = ConstantExtention.ViewMode.View; // Default mode
    private GetUserWithRoleResponseDTO? userDto;

    protected override async Task OnInitializedAsync()
    {
        if (UserId.HasValue)
        {
            await LoadUserDetail(UserId.Value);
        }
    }

    private async Task LoadUserDetail(Guid userId)
    {
        mode = ConstantExtention.ViewMode.View; // Set mode to view after loading
    }

    private void EditUser()
    {
        mode = ConstantExtention.ViewMode.Edit; // Set to edit mode
    }
}